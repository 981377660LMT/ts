/*
 * _______________#########_______________________ 
 * ______________############_____________________ 
 * ______________#############____________________ 
 * _____________##__###########___________________ 
 * ____________###__######_#####__________________ 
 * ____________###_#######___####_________________ 
 * ___________###__##########_####________________ 
 * __________####__###########_####_______________ 
 * ________#####___###########__#####_____________ 
 * _______######___###_########___#####___________ 
 * _______#####___###___########___######_________ 
 * ______######___###__###########___######_______ 
 * _____######___####_##############__######______ 
 * ____#######__#####################_#######_____ 
 * ____#######__##############################____ 
 * ___#######__######_#################_#######___ 
 * ___#######__######_######_#########___######___ 
 * ___#######____##__######___######_____######___ 
 * ___#######________######____#####_____#####____ 
 * ____######________#####_____#####_____####_____ 
 * _____#####________####______#####_____###______ 
 * ______#####______;###________###______#________ 
 * ________##_______####________####______________ 
 */



/**
 * 立即执行，函数作用域避免命名冲突
 */
(function (): void {
    class Animal {
        static id: number = 1
        name: string
        age: number

        constructor(name: string, age: number) {
            this.name = name
            this.age = age
        }

        sayHello() {
            console.log('hi');
        }

    }

    /**
     * animal为父类
     */

    class Dog extends Animal {
        voice: string

        //派生类的构造函数必须包含 "super" 调用。
        //访问派生类的构造函数中的 "this" 前，必须调用 "super"。
        constructor(name: string, age: number, voice: string) {
            super(name, age)
            this.voice = voice
        }

        run() {
            console.log(`${this.name} is running`);
        }

        //super表示当前类的父类
        //通过 "super" 关键字只能访问基类的公共方法和受保护方法。
        sayHello() {
            // super.sayHello()
            console.log('wang');

        }

    }

    const dog = new Dog('dog', 5, 'wang')
    console.log(dog);
    dog.sayHello()
    dog.run()

})()


