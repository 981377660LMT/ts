// 访问者模式是23种设计模式中最复杂、最难理解的设计模式
// 访问者模式的一个典型的应用场景是编译器前端。
// 编译的中间结果：抽象语法树（AST），是一个树形结构的复杂对象。
// 做完词法分析和语法分析将高级语言程序转换为AST之后，需要对AST做多遍操作，
// 包括但不限于：建立符号表、静态语法检查、转换至中间码。
// 上述这些操作都需要遍历AST对象进行操作。使用观察者模式，
// 将AST对象作为被访问者（配合组合模式），将编译器前端对AST的操作作为访问者，
// 可以实现AST结构与AST操作的分离，便于功能扩展。
