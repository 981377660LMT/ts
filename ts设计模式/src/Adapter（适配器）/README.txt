*适配器模式：
·定义：将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类能一起工作。
·解释：对于一个已有的模块，我们想使用它，但是发现它的接口与已有的系统对接不上，但是要重新开发该模块代价又很大，这是可以使用适配器将已有模块和已有系统对接上。
·场景：
  -- 家用电压为360v，而笔记本电脑电压只能是12v，此时可以通过一个适配器将家庭电压转换为笔记本电压。
  -- 小游戏的运行环境没有BOM和DOM，没有全局的document和window对象。因此当你希望使用DOM API来创建Canvas和Image等元素的时候，会引发错误。此时，微信团队就提供的一个Adapter模块，该模块是对基于浏览器环境的游戏引擎在小游戏运行环境下的一层适配层，使游戏引擎在调用DOM和访问DOM属性时不会产生错误。（https://developers.weixin.qq.com/minigame/dev/tutorial/base/adapter.html）
  -- 某软件公司在很久以前曾开发了一个算法库，里面包含了一些常用的算法，例如排序算法和查找算法，在进行各类软件开发时经常需要重用该算法库中的算法。在为某学校开发教务管理系统时，开发人员发现需要对学生成绩进行排序和查找，该系统的设计人员已经开发了一个成绩操作接口ScoreOperation，在该接口中声明了排序方法sort(int[]) 和查找方法search(int[], int)，为了提高排序和查找的效率，开发人员决定重用算法库中的快速排序算法类QuickSort和二分查找算法类BinarySearch，其中QuickSort的quickSort(int[])方法实现了快速排序，BinarySearch 的binarySearch (int[], int)方法实现了二分查找。由于某些原因，现在某公司开发人员已经找不到该算法库的源代码，无法直接通过复制和粘贴操作来重用其中的代码；部分开发人员已经针对ScoreOperation接口编程，如果再要求对该接口进行修改或要求大家直接使用QuickSort类和BinarySearch类将导致大量代码需要修改。某软件公司开发人员面对这个没有源码的算法库，遇到一个幸福而又烦恼的问题：如何在既不修改现有接口又不需要任何算法库代码的基础上能够实现算法库的重用？最好的实现方法是增加一个类似电源适配器一样的适配器角色，通过适配器来协调这两个原本不兼容的结构。
  -- 某软件公司OA系统需要提供一个加密模块，将用户机密信息（如口令、邮箱等）加密之后再存储在数据库中，系统已经定义好了数据库操作类。为了提高开发效率，现需要重用已有的加密算法，这些算法封装在一些由第三方提供的类中，有些甚至没有源代码。这样可以使用适配器模式设计该加密模块，实现在不修改现有类的基础上重用第三方加密方法。
·优点：
·缺点：
·桥接模式和适配器模式的区别：
  -- 如果你拿到两个已有模块，想让他们同时工作，那么你使用的适配器。如果你还什么都没有，但是想分开实现，那么桥接是一个选择。
  -- 桥接是先有桥，才有两端的东西，桥接是在桥好了之后，两边的东西还可以变化；适配是先有两边的东西，才有适配器